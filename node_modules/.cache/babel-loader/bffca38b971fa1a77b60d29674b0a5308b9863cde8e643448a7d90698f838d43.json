{"ast":null,"code":"const baseUrl = \"https://hacker-news.firebaseio.com/v0/\";\nconst getNewsIds = `${baseUrl}/newstories.json`;\nconst itemUrl = `${baseUrl}/item/`;\nexport const getAllNews = async () => {\n  console.log(\"halo\");\n  try {\n    const res = await fetch(getNewsIds);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};\nexport const getNews = async newsId => {\n  try {\n    const res = await fetch(`${itemUrl + newsId}.json`).then(res => res.json());\n    return res;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};\nexport const getComments = async commentsIdArr => {\n  const comments = [];\n  try {\n    for (let i = 0; i < commentsIdArr.length; i++) {\n      const res = await fetch(`${itemUrl + commentsIdArr[i]}.json`).then(res => res.json());\n      comments.push(res);\n    }\n    return comments;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};","map":{"version":3,"names":["baseUrl","getNewsIds","itemUrl","getAllNews","console","log","res","fetch","data","json","error","getNews","newsId","then","getComments","commentsIdArr","comments","i","length","push"],"sources":["/home/adamadziev/Рабочий стол/тестовое задание авито yarn/src/utils/Api.js"],"sourcesContent":["const baseUrl = \"https://hacker-news.firebaseio.com/v0/\";\nconst getNewsIds = `${baseUrl}/newstories.json`;\nconst itemUrl = `${baseUrl}/item/`;\n\nexport const getAllNews = async () => {\n  console.log(\"halo\");\n  try {\n    const res = await fetch(getNewsIds);\n    const data = await res.json();\n\n    return data;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};\n\nexport const getNews = async (newsId) => {\n  try {\n    const res = await fetch(`${itemUrl + newsId}.json`).then((res) =>\n      res.json()\n    );\n    return res;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};\n\nexport const getComments = async (commentsIdArr) => {\n  const comments = [];\n  try {\n    for (let i = 0; i < commentsIdArr.length; i++) {\n      const res = await fetch(`${itemUrl + commentsIdArr[i]}.json`).then(\n        (res) => res.json()\n      );\n      comments.push(res);\n    }\n\n    return comments;\n  } catch (error) {\n    console.error(`Ошибка при получении данных: ${error}`);\n  }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,wCAAwC;AACxD,MAAMC,UAAU,GAAI,GAAED,OAAQ,kBAAiB;AAC/C,MAAME,OAAO,GAAI,GAAEF,OAAQ,QAAO;AAElC,OAAO,MAAMG,UAAU,GAAG,YAAY;EACpCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,UAAU,CAAC;IACnC,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAE7B,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,MAAM,IAAK;EACvC,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAO,GAAGU,MAAO,OAAM,CAAC,CAACC,IAAI,CAAEP,GAAG,IAC3DA,GAAG,CAACG,IAAI,EAAE,CACX;IACD,OAAOH,GAAG;EACZ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,aAAa,IAAK;EAClD,MAAMC,QAAQ,GAAG,EAAE;EACnB,IAAI;IACF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAO,GAAGa,aAAa,CAACE,CAAC,CAAE,OAAM,CAAC,CAACJ,IAAI,CAC/DP,GAAG,IAAKA,GAAG,CAACG,IAAI,EAAE,CACpB;MACDO,QAAQ,CAACG,IAAI,CAACb,GAAG,CAAC;IACpB;IAEA,OAAOU,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}