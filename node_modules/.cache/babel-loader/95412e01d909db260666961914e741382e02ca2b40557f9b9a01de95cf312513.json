{"ast":null,"code":"var _jsxFileName = \"/home/adamadziev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0438\\u0442\\u043E yarn/src/Components/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Comments } from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comment = _ref => {\n  _s();\n  let {\n    comment,\n    getAllComments = false\n  } = _ref;\n  const [isKidsComments, setIsKidsComments] = React.useState(false);\n  const onClickGetComments = () => {\n    if (comment.kids) {\n      setIsKidsComments(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: onClickGetComments,\n      children: comment.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), getAllComments ? /*#__PURE__*/_jsxDEV(Comments, {\n      commentsId: comment.kids\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : isKidsComments && /*#__PURE__*/_jsxDEV(Comments, {\n      commentsId: comment.kids,\n      getAllComments: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"wxvC5tV69BWyBbIyiEDb94dmLaQ=\");\n_c = Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","Comments","Comment","comment","getAllComments","isKidsComments","setIsKidsComments","useState","onClickGetComments","kids","text"],"sources":["/home/adamadziev/Рабочий стол/тестовое задание авито yarn/src/Components/Comment.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Comments } from \"./Comments\";\n\nexport const Comment = ({ comment, getAllComments = false }) => {\n  const [isKidsComments, setIsKidsComments] = React.useState(false);\n\n  const onClickGetComments = () => {\n    if (comment.kids) {\n      setIsKidsComments(true);\n    }\n  };\n\n  return (\n    <li>\n      <p onClick={onClickGetComments}>{comment.text}</p>\n      {getAllComments ? (\n        <Comments commentsId={comment.kids} />\n      ) : (\n        isKidsComments && (\n          <Comments commentsId={comment.kids} getAllComments={true} />\n        )\n      )}\n      {/* {getAllComments && <Comments commentsId={comment.kids} />}\n      {isKidsComments && (\n        <Comments commentsId={comment.kids} getAllComments={true} />\n      )} */}\n    </li>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,YAAY;AAAC;AAEtC,OAAO,MAAMC,OAAO,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAAEC,OAAO;IAAEC,cAAc,GAAG;EAAM,CAAC;EACzD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMC,kBAAkB,GAAG,MAAM;IAC/B,IAAIL,OAAO,CAACM,IAAI,EAAE;MAChBH,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAG,OAAO,EAAEE,kBAAmB;MAAA,UAAEL,OAAO,CAACO;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,EACjDN,cAAc,gBACb,QAAC,QAAQ;MAAC,UAAU,EAAED,OAAO,CAACM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,GAEtCJ,cAAc,iBACZ,QAAC,QAAQ;MAAC,UAAU,EAAEF,OAAO,CAACM,IAAK;MAAC,cAAc,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAE5D;EAAA;IAAA;IAAA;IAAA;EAAA,QAKE;AAET,CAAC;AAAC,GAzBWP,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}