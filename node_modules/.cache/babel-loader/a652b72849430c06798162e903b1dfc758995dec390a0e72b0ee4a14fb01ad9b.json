{"ast":null,"code":"var _jsxFileName = \"/home/adamadziev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0438\\u0442\\u043E yarn/src/Components/Comments.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Comment } from \"./Comment\";\nimport { getComments } from \"../utils/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = _ref => {\n  _s();\n  let {\n    commentsId,\n    getAllComments = false\n  } = _ref;\n  const [comments, setComments] = React.useState([]);\n  React.useEffect(() => {\n    if (commentsId) {\n      getComments(commentsId).then(res => setComments(res));\n    }\n    return setComments([]);\n  }, []);\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      getAllComments: getAllComments\n    }, comment.time, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","Comment","getComments","Comments","commentsId","getAllComments","comments","setComments","useState","useEffect","then","res","console","log","map","comment","time"],"sources":["/home/adamadziev/Рабочий стол/тестовое задание авито yarn/src/Components/Comments.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Comment } from \"./Comment\";\n\nimport { getComments } from \"../utils/Api\";\n\nexport const Comments = ({ commentsId, getAllComments = false }) => {\n  const [comments, setComments] = React.useState([]);\n\n  React.useEffect(() => {\n    if (commentsId) {\n      getComments(commentsId).then((res) => setComments(res));\n    }\n\n    return setComments([]);\n  }, []);\n\n  console.log(comments);\n\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <Comment\n          key={comment.time}\n          comment={comment}\n          getAllComments={getAllComments}\n        />\n      ))}\n    </ul>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,WAAW;AAEnC,SAASC,WAAW,QAAQ,cAAc;AAAC;AAE3C,OAAO,MAAMC,QAAQ,GAAG,QAA4C;EAAA;EAAA,IAA3C;IAAEC,UAAU;IAAEC,cAAc,GAAG;EAAM,CAAC;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAElDR,KAAK,CAACS,SAAS,CAAC,MAAM;IACpB,IAAIL,UAAU,EAAE;MACdF,WAAW,CAACE,UAAU,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAKJ,WAAW,CAACI,GAAG,CAAC,CAAC;IACzD;IAEA,OAAOJ,WAAW,CAAC,EAAE,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,oBACE;IAAA,UACGA,QAAQ,CAACQ,GAAG,CAAEC,OAAO,iBACpB,QAAC,OAAO;MAEN,OAAO,EAAEA,OAAQ;MACjB,cAAc,EAAEV;IAAe,GAF1BU,OAAO,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QAIpB;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET,CAAC;AAAC,GAxBWb,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}